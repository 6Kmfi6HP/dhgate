name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Changed from '3.x' to '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build executable
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          pyinstaller windows.spec
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          pyinstaller macos.spec
        else
          pyinstaller linux.spec
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-executable
        path: dist/dhgate*
        retention-days: 1  # Set the retention period for artifacts

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: ubuntu-latest-executable
        path: ./ubuntu
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: macos-latest-executable
        path: ./macos
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: windows-latest-executable
        path: ./windows

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (Ubuntu)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubuntu/dhgate
        asset_name: dhgate-ubuntu
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (macOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./macos/dhgate
        asset_name: dhgate-macos
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows/dhgate.exe
        asset_name: dhgate-windows.exe
        asset_content_type: application/octet-stream